[{"C:\\Projects\\reactjs\\connect-four-game\\src\\index.js":"1","C:\\Projects\\reactjs\\connect-four-game\\src\\App.js":"2","C:\\Projects\\reactjs\\connect-four-game\\src\\reportWebVitals.js":"3","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\Button\\Button.js":"4","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\MainPage\\MainPage.js":"5","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameInputs\\GameInputs.js":"6","C:\\Projects\\reactjs\\connect-four-game\\src\\Store\\reducer.js":"7","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameInputs\\Modal\\Modal.js":"8","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameInputs\\Modal\\RadioButton.js":"9","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameContainer\\GameContainer.js":"10","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\PlayerCard\\PlayerCard.js":"11","C:\\Projects\\reactjs\\connect-four-game\\src\\types.js":"12","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\Navbar\\Navbar.js":"13","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\Layout.js":"14"},{"size":776,"mtime":1609074722257,"results":"15","hashOfConfig":"16"},{"size":387,"mtime":1609248595425,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":469,"mtime":1609172716547,"results":"19","hashOfConfig":"16"},{"size":1663,"mtime":1609246734898,"results":"20","hashOfConfig":"16"},{"size":3408,"mtime":1609248734160,"results":"21","hashOfConfig":"16"},{"size":380,"mtime":1609248876047,"results":"22","hashOfConfig":"16"},{"size":1862,"mtime":1609172716547,"results":"23","hashOfConfig":"16"},{"size":400,"mtime":1609084869531,"results":"24","hashOfConfig":"16"},{"size":8893,"mtime":1609181480140,"results":"25","hashOfConfig":"16"},{"size":1263,"mtime":1609178406304,"results":"26","hashOfConfig":"16"},{"size":103,"mtime":1609160945007,"results":"27","hashOfConfig":"16"},{"size":527,"mtime":1609247991826,"results":"28","hashOfConfig":"16"},{"size":576,"mtime":1609247041708,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"3q5pxo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\reactjs\\connect-four-game\\src\\index.js",[],["63","64"],"C:\\Projects\\reactjs\\connect-four-game\\src\\App.js",["65","66","67"],"import './App.css';\nimport MainPage from \"./component/MainPage/MainPage\";\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from './component/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/game\" component={Layout}/>\n        <Route path=\"/\" component={MainPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Projects\\reactjs\\connect-four-game\\src\\reportWebVitals.js",[],"C:\\Projects\\reactjs\\connect-four-game\\src\\component\\Button\\Button.js",[],"C:\\Projects\\reactjs\\connect-four-game\\src\\component\\MainPage\\MainPage.js",[],"C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameInputs\\GameInputs.js",["68","69"],"C:\\Projects\\reactjs\\connect-four-game\\src\\Store\\reducer.js",[],"C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameInputs\\Modal\\Modal.js",[],"C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameInputs\\Modal\\RadioButton.js",[],"C:\\Projects\\reactjs\\connect-four-game\\src\\component\\GameContainer\\GameContainer.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./GameContainer.css\";\r\nimport PlayerCard from \"../PlayerCard/PlayerCard\";\r\nimport avatar01 from \"../../assets/avatar01.png\";\r\nimport avatar02 from \"../../assets/avatar02.png\";\r\nimport Button from \"../Button/Button\";\r\nimport { noOfGame } from \"../../types\";\r\n\r\nclass GameContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.circles = []\r\n\r\n    this.circlesDiv = [];\r\n    this.rowsDiv = [];\r\n\r\n    this.initializeCircle();\r\n    this.totalGame = noOfGame;\r\n    this.whoStarts = 2; //for alternate\r\n    this.updateTurn();\r\n\r\n    this.state = {\r\n      gameCount: 1,\r\n      circles: this.circles,\r\n      currentPlayer: this.whoStarts,\r\n      winData: { player1: 0, player2: 0 },\r\n      winCircles: [],\r\n      gameComplete: false,\r\n      tournamentComplete: false,\r\n      winner: \"\"\r\n    }\r\n  }\r\n\r\n  initializeCircle() {\r\n    for (let i = 0; i < 8; i++) {\r\n      this.circles.push([]);\r\n      for (let j = 0; j < 8; j++) {\r\n        this.circles[i][j] = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  updateTurn() {\r\n    let currentPlayer = this.state ? this.state.currentPlayer : 2;\r\n    switch (this.props.gameMeta.whoStarts) {\r\n      case \"Alternate turn\":\r\n        this.whoStarts = this.whoStarts == 1 ? 2 : 1\r\n        break;\r\n      case \"Looser first\":\r\n          this.whoStarts= currentPlayer == 1 ? 2 : 1 //current player is also the current winner\r\n        break;\r\n      case \"Winner first\":\r\n          this.whoStarts= currentPlayer //current player is also the current winner\r\n        break;\r\n      case \"Always player 01\":\r\n          this.whoStarts= 1\r\n        break;\r\n      case \"Always player 02\":\r\n          this.whoStarts= 2\r\n        break;\r\n    }\r\n  }\r\n\r\n  gameReset() {\r\n    this.initializeCircle();\r\n    this.updateTurn();\r\n    this.setState({\r\n      gameCount: this.state.gameCount + 1,\r\n      circles: this.circles,\r\n      currentPlayer: this.whoStarts,\r\n      winCircles: [],\r\n      gameComplete: false,\r\n      winner: \"\"\r\n    })\r\n  }\r\n\r\n  tournamentReset() {\r\n    this.initializeCircle();\r\n    this.updateTurn();\r\n    this.setState({\r\n      gameCount: 1,\r\n      circles: this.circles,\r\n      currentPlayer: this.whoStarts,\r\n      winData: { player1: 0, player2: 0 },\r\n      winCircles: [],\r\n      gameComplete: false,\r\n      tournamentComplete: false,\r\n      winner: \"\"\r\n    })\r\n  }\r\n\r\n  onColumnClick(event) {\r\n    let circles = this.state.circles\r\n    let col = +event.target.dataset.col;\r\n    let currentPlayer = this.state.currentPlayer;\r\n    let index = -1;\r\n    let winCircles, isGameComplete = false;\r\n    let winDetails = this.state.winData;\r\n    let winner = \"\"\r\n    for (let i = 7; i >= 0; i--) {\r\n      if (circles[i][col] == \"\") {\r\n        circles[i][col] = this.state.currentPlayer;\r\n        index = i;\r\n        winCircles = this.checkWin(circles, col, index);\r\n        if (winCircles) {\r\n          winDetails[\"player\" + this.state.currentPlayer] += 1;\r\n          isGameComplete = true;\r\n          winner = this.props.gameMeta[\"player\" + this.state.currentPlayer];\r\n          break;\r\n        }\r\n        if (this.state.currentPlayer == 1) {\r\n          currentPlayer = 2\r\n        } else {\r\n          currentPlayer = 1\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(circles, winCircles)\r\n    this.setState({\r\n      circles: circles,\r\n      currentPlayer: currentPlayer,\r\n      winData: winDetails,\r\n      winCircles: winCircles,\r\n      gameComplete: isGameComplete,\r\n      winner: winner,\r\n      tournamentComplete: this.state.gameCount == this.totalGame[this.props.gameMeta.noOfGame]\r\n    })\r\n  }\r\n\r\n  checkWin(circles, col, row) {\r\n    let currentPlayer = this.state.currentPlayer;\r\n    let rowCount = [], colCount = [], leftDiagCount = [], rightDiagCount = [];\r\n\r\n    //row\r\n    for (let i = 0; i < 8; i++) {\r\n      if (circles[row][i] == currentPlayer) {\r\n        rowCount.push(row + \"\" + i);\r\n        if (rowCount.length == 4) {\r\n          return rowCount;\r\n        }\r\n      } else {\r\n        rowCount = [];\r\n      }\r\n\r\n      //col\r\n      if (circles[i][col] == currentPlayer) {\r\n        colCount.push(i + \"\" + col);\r\n        if (colCount.length == 4) {\r\n          return colCount;\r\n        }\r\n      } else {\r\n        colCount = [];\r\n      }\r\n    }\r\n\r\n    //left Diag\r\n    let x, y;\r\n    if (row > col) {\r\n      x = row - col; y = 0;\r\n    } else if (row < col) {\r\n      x = 0; y = col - row;\r\n    } else {\r\n      x = 0; y = 0;\r\n    }\r\n    for (let i = x, j = y; i < 8 && j < 8; i++, j++) {\r\n      if (circles[i][j] == currentPlayer) {\r\n        leftDiagCount.push(i + \"\" + j);\r\n        if (leftDiagCount.length == 4) {\r\n          return leftDiagCount;\r\n        }\r\n      } else {\r\n        leftDiagCount = []\r\n      }\r\n    }\r\n\r\n    //right Diag\r\n    let xend, yend;\r\n    if (row + col < 7) {\r\n      x = 0; y = row + col;\r\n      xend = row + col; yend = 0;\r\n    } else {\r\n      x = row + col - 7; y = 7;\r\n      xend = 7; yend = row + col - 7;\r\n    }\r\n    for (let i = x, j = y; i <= xend && j >= yend; i++, j--) {\r\n      if (circles[i][j] == currentPlayer) {\r\n        rightDiagCount.push(i + \"\" + j);\r\n        if (rightDiagCount.length == 4) {\r\n          return rightDiagCount;\r\n        }\r\n      } else {\r\n        rightDiagCount = []\r\n      }\r\n    }\r\n  }\r\n\r\n  endTournament() {\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"full-container\">\r\n        <div className=\"game-container\">\r\n          <div className=\"game-bg\" onClick={this.state.gameComplete ? null : this.onColumnClick.bind(this)}>\r\n            {this.circles.map((items, rowIndex) => {\r\n              return (\r\n                <div className='rows' key={rowIndex}>\r\n                  {items.map((subItems, colIndex) => {\r\n                    return (\r\n                      <div className={\"circle\" + (this.state.winCircles && this.state.winCircles.includes(rowIndex + \"\" + colIndex) ? \" win-mark\" : \"\")} key={rowIndex + \"\" + colIndex} data-col={colIndex}>\r\n                        {\r\n                          subItems == 1 ? <div className=\"p1-img\"><img src={avatar01} className=\"imgSize\" /></div> : null\r\n                        }\r\n                        {\r\n                          subItems == 2 ? <div className=\"p2-img\"><img src={avatar02} className=\"imgSize\" /></div> : null\r\n                        }\r\n\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )\r\n            })\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard\">\r\n          <div className=\"title\">{this.props.gameMeta.noOfGame} Tournament</div>\r\n\r\n          {this.state.gameComplete ?\r\n            <div className=\"congrats\">{this.state.tournamentComplete && this.state.winData.player1 == this.state.winData.player2\r\n              ? \"Tournament Draw!\" : \"Congratulations!\"}</div>\r\n            : null\r\n          }\r\n          <div className=\"subtitle\">{\r\n            this.state.tournamentComplete && this.state.winData.player1 != this.state.winData.player2 ?\r\n              (this.state.winData.player1 > this.state.winData.player2 ? this.props.gameMeta.player1 : this.props.gameMeta.player2) + \", you won Tournament\" :\r\n              this.state.gameComplete ? this.state.winner + \", you won Game \" + this.state.gameCount :\r\n                \"Playing Game \" + this.state.gameCount}</div>\r\n          <PlayerCard theme=\"green\" logo={avatar01} label=\"Player 01\" value={this.props.gameMeta.player1}\r\n            score={this.state.winData.player1}\r\n            selectedPlayer={this.state.gameComplete ? false : this.state.currentPlayer == 1} />\r\n          <PlayerCard theme=\"yellow\" logo={avatar02} label=\"Player 02\" value={this.props.gameMeta.player2}\r\n            score={this.state.winData.player2}\r\n            selectedPlayer={this.state.gameComplete ? false : this.state.currentPlayer == 2} />\r\n          <div className=\"footer\">\r\n            {this.state.gameComplete ? this.state.tournamentComplete ?\r\n              <Button color=\"blue2\" text=\"Play Again\" logo=\"\" width=\"100%\" fontWeight=\"600\" clickHandler={this.tournamentReset.bind(this)} />\r\n              :\r\n              <Button color=\"blue2\" text=\"Next Game\" logo=\"\" width=\"100%\" fontWeight=\"600\" clickHandler={this.gameReset.bind(this)} />\r\n              :\r\n              <Button color=\"blue2\" text=\"Undo Step\" logo=\"\" width=\"100%\" fontWeight=\"600\" />\r\n            }\r\n            <div style={{ marginTop: \"20px\" }}>\r\n              <Button color=\"secondary btn-red\" text=\"End Tournament\" logo=\"\" width=\"100%\" fontWeight=\"600\"\r\n                clickHandler={this.endTournament.bind(this)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    gameMeta: state.gameDetails\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GameContainer)","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\PlayerCard\\PlayerCard.js",["92","93","94"],"import React from \"react\";\r\nimport \"./PlayerCard.css\"\r\n\r\nfunction PlayerCard(props) {\r\n  return (\r\n    <div className={\"card card-theme-\" + props.theme} onClick={props.clickHandler}>\r\n      <div className={props.selectedPlayer ? \"selected-player\" : \"non-selected-player\"}>\r\n        <div className=\"img-container\">\r\n          <img src={props.logo} className=\"logoImg\" />\r\n        </div>\r\n      </div>\r\n      {\r\n        props.isInput ?\r\n          <div className={\"container bottom-border\"}>\r\n            <span className=\"label\">{props.label}</span>\r\n            <input type=\"text\" className=\"customize-input value\" name={props.nameProp} value={props.value}\r\n              onChange={props.onInputChnage}/>\r\n          </div>\r\n          :\r\n          <div className={\"container \" + (props.score == undefined ? \"bottom-border\" : \"\")}>\r\n            <span className=\"label\">{props.label}</span>\r\n            <div className=\"value\">{props.value}</div>\r\n          </div>\r\n      }\r\n\r\n      {\r\n        props.score != undefined ?\r\n          <div className=\"container score\">\r\n            <span className=\"label\">Score</span>\r\n            <span className=\"value\">{props.score}</span>\r\n          </div>\r\n          : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerCard;","C:\\Projects\\reactjs\\connect-four-game\\src\\types.js",["95","96","97","98"],"export const noOfGame={\r\n  [\"2 Games\"]: 2,\r\n  [\"3 Games\"]: 3,\r\n  [\"5 Games\"]: 5,\r\n  [\"10 Games\"]: 10\r\n}","C:\\Projects\\reactjs\\connect-four-game\\src\\component\\Navbar\\Navbar.js",["99"],"C:\\Projects\\reactjs\\connect-four-game\\src\\component\\Layout.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":18},{"ruleId":"104","severity":1,"message":"108","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":21},{"ruleId":"104","severity":1,"message":"109","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":24,"column":39,"nodeType":"112","messageId":"113","endLine":24,"endColumn":41},{"ruleId":"110","severity":1,"message":"111","line":25,"column":39,"nodeType":"112","messageId":"113","endLine":25,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":46,"column":5,"nodeType":"116","messageId":"117","endLine":62,"endColumn":6},{"ruleId":"110","severity":1,"message":"111","line":48,"column":41,"nodeType":"112","messageId":"113","endLine":48,"endColumn":43},{"ruleId":"110","severity":1,"message":"111","line":51,"column":41,"nodeType":"112","messageId":"113","endLine":51,"endColumn":43},{"ruleId":"110","severity":1,"message":"111","line":102,"column":27,"nodeType":"112","messageId":"113","endLine":102,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":112,"column":38,"nodeType":"112","messageId":"113","endLine":112,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":129,"column":48,"nodeType":"112","messageId":"113","endLine":129,"endColumn":50},{"ruleId":"110","severity":1,"message":"111","line":139,"column":27,"nodeType":"112","messageId":"113","endLine":139,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":141,"column":29,"nodeType":"112","messageId":"113","endLine":141,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":149,"column":27,"nodeType":"112","messageId":"113","endLine":149,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":151,"column":29,"nodeType":"112","messageId":"113","endLine":151,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":169,"column":25,"nodeType":"112","messageId":"113","endLine":169,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":171,"column":34,"nodeType":"112","messageId":"113","endLine":171,"endColumn":36},{"ruleId":"110","severity":1,"message":"111","line":189,"column":25,"nodeType":"112","messageId":"113","endLine":189,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":191,"column":35,"nodeType":"112","messageId":"113","endLine":191,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":216,"column":36,"nodeType":"112","messageId":"113","endLine":216,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":216,"column":67,"nodeType":"120","endLine":216,"endColumn":109},{"ruleId":"110","severity":1,"message":"111","line":219,"column":36,"nodeType":"112","messageId":"113","endLine":219,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":219,"column":67,"nodeType":"120","endLine":219,"endColumn":109},{"ruleId":"110","severity":1,"message":"111","line":235,"column":100,"nodeType":"112","messageId":"113","endLine":235,"endColumn":102},{"ruleId":"110","severity":1,"message":"121","line":240,"column":73,"nodeType":"112","messageId":"113","endLine":240,"endColumn":75},{"ruleId":"110","severity":1,"message":"111","line":246,"column":88,"nodeType":"112","messageId":"113","endLine":246,"endColumn":90},{"ruleId":"110","severity":1,"message":"111","line":249,"column":88,"nodeType":"112","messageId":"113","endLine":249,"endColumn":90},{"ruleId":"118","severity":1,"message":"119","line":9,"column":11,"nodeType":"120","endLine":9,"endColumn":55},{"ruleId":"110","severity":1,"message":"111","line":20,"column":55,"nodeType":"112","messageId":"113","endLine":20,"endColumn":57},{"ruleId":"110","severity":1,"message":"121","line":27,"column":21,"nodeType":"112","messageId":"113","endLine":27,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":2,"column":3,"nodeType":"124","messageId":"125","endLine":2,"endColumn":17,"fix":"126"},{"ruleId":"122","severity":1,"message":"127","line":3,"column":3,"nodeType":"124","messageId":"125","endLine":3,"endColumn":17,"fix":"128"},{"ruleId":"122","severity":1,"message":"129","line":4,"column":3,"nodeType":"124","messageId":"125","endLine":4,"endColumn":17,"fix":"130"},{"ruleId":"122","severity":1,"message":"131","line":5,"column":3,"nodeType":"124","messageId":"125","endLine":5,"endColumn":19,"fix":"132"},{"ruleId":"133","severity":1,"message":"134","line":5,"column":3,"nodeType":"135","messageId":"136","endLine":7,"endColumn":4},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'GameInputs' is defined but never used.","Identifier","unusedVar","'GameContainer' is defined but never used.","'Navbar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-useless-computed-key","Unnecessarily computed property [\"2 Games\"] found.","Property","unnecessarilyComputedProperty",{"range":"139","text":"140"},"Unnecessarily computed property [\"3 Games\"] found.",{"range":"141","text":"142"},"Unnecessarily computed property [\"5 Games\"] found.",{"range":"143","text":"144"},"Unnecessarily computed property [\"10 Games\"] found.",{"range":"145","text":"146"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",[27,38],"\"2 Games\"",[46,57],"\"3 Games\"",[65,76],"\"5 Games\"",[84,96],"\"10 Games\""]